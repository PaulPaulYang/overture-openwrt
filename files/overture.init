#!/bin/sh /etc/rc.common

USE_PROCD=1

START=99

add_dns_object() {
	json_add_object
	json_add_string Name $(config_get $1 Name)
	json_add_string Address $(config_get $1 Address)
	json_add_string Protocol $(config_get $1 Protocol)
	json_add_string SOCKS5Address $(config_get $1 SOCKS5Address)
	json_add_int Timeout $(config_get $1 Timeout)
	json_add_object EDNSClientSubnet
	json_close_object
	json_close_object
}

# generate_json <cfgid>
# this func is for overture instance
generate_json() {
	local _tmp
	json_init
	json_add_string BindAddress $(config_get $1 BindAddress)
	json_add_string DebugHTTPAddress $(config_get $1 DebugHTTPAddress)
	json_add_array PrimaryDNS
		config_list_foreach $1 PrimaryDNS add_dns_object
	json_close_array
	json_add_array AlternativeDNS
		config_list_foreach $1 AlternativeDNS add_dns_object
	json_close_array
	[ $(config_get $1 OnlyPrimaryDNS) == "true" ] && _tmp=1 || _tmp=0
	json_add_boolean OnlyPrimaryDNS $_tmp
	[ $(config_get $1 IPv6UseAlternativeDNS) == "true" ] && _tmp=1 || _tmp=0
	json_add_boolean IPv6UseAlternativeDNS $_tmp
	json_add_string WhenPrimaryDNSAnswerNoneUse $(config_get $1 WhenPrimaryDNSAnswerNoneUse)
	json_add_object IPNetworkFile
		json_add_string Primary $(config_get $1 IPNetworkFilePrimary)
		json_add_string Alternative $(config_get $1 IPNetworkFileAlternative)
	json_close_object
	json_add_object DomainFile
		json_add_string Primary $(config_get $1 DomainFilePrimary)
		json_add_string Alternative $(config_get $1 DomainFileAlternative)
		json_add_string Matcher $(config_get $1 DomainFileMatcher)
	json_close_object
	json_add_string HostsFile $(config_get $1 HostsFile)
	json_add_int MinimumTTL $(config_get $1 MinimumTTL)
	json_add_string DomainTTLFile $(config_get $1 DomainTTLFile)
	json_add_int CacheSize $(config_get $1 CacheSize)
	json_add_array RejectQType
		config_list_foreach $1 RejectQType "json_add_int ''"
	json_close_array

	json_dump > /var/run/overture/overture-$1.json
}

overture_get_options() {
	if [ $(config_get $1 VerboseMode) == "true" ]; then
		echo -v
	fi
	if [ $(config_get $1 LogToFile) != "" ]; then
		echo -l $(config_get $1 LogToFile)
	fi
	if [ $(config_get $1 CoreNumber) != "" ]; then
		echo -p $(config_get $1 CoreNumber)
	fi
}

start_instance() {
	procd_open_instance overture-$1
	procd_set_param command overture -c /var/run/overture/overture-$1.json $(overture_get_options $1)
	procd_set_param pidfile /var/run/overture/overture-$1.pid
	procd_set_param respawn
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_close_instance
}

# ===== Begin of PROCD part ===== #

start_service() {
	mkdir /var/run/overture
	config_load overture
	config_foreach generate_json overture
	config_foreach start_instance overture
}

stop_service() {
	rm -r /var/run/overture
}
